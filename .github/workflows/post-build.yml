name: Post Build and Verify

on:
  workflow_run:
    workflows: ["Build and Verify"]
    types:
      - completed

jobs:
  post-build-and-verify:
    runs-on: ubuntu-20.04
    if: >-
      ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Verify PR
        run: |
          echo "Hi"
          echo "github.event.number" ${{ github.event.number }}
          echo "github.event.workflow_run.event" ${{ github.event.workflow_run.event }}
          echo "github.event.workflow_run.head_branch" ${{ github.event.workflow_run.head_branch }}
          echo "github.event.workflow_run.head_sha" ${{ github.event.workflow_run.head_sha }}
          echo "github.event.workflow_run.status" ${{ github.event.workflow_run.status }}
          echo "github.event.workflow_run.conclusion" ${{ github.event.workflow_run.conclusion }}
          echo "github.event.workflow_run.url" ${{ github.event.workflow_run.url }}
          echo "github.event.workflow_run.pull_requests[0]" ${{ github.event.workflow_run.pull_requests[0] }}

      - name: 'Download artifact'
        uses: actions/github-script@v3
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip

      - name: 'Comment on PR'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('./NR'));
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: 'Thank you for the PR! There are some error. Please check the log.'
            });
